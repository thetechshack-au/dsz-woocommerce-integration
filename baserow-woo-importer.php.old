<?php
/**
 * Plugin Name: Baserow WooCommerce Product Importer
 * Description: Import products from Baserow database into WooCommerce
 * Version: 0.12
 * Author: Andrew Waite
 * Requires PHP: 7.2
 */

// If this file is called directly, abort.
if (!defined('ABSPATH')) {
    exit;
}

// Define plugin constants
define('BASEROW_IMPORTER_VERSION', '1.0.0');
define('BASEROW_IMPORTER_PLUGIN_DIR', plugin_dir_path(__FILE__));
define('BASEROW_IMPORTER_PLUGIN_URL', plugin_dir_url(__FILE__));

class Baserow_Woo_Importer {
    private $settings;
    
    public function __construct() {
        // Load dependencies
        require_once BASEROW_IMPORTER_PLUGIN_DIR . 'includes/class-baserow-settings.php';
        
        // Initialize settings
        $this->settings = new Baserow_Settings();
        
        // Add admin menu
        add_action('admin_menu', array($this, 'add_admin_menu'));

        // Add AJAX handlers
        add_action('wp_ajax_test_baserow_connection', array($this, 'test_baserow_connection'));
        add_action('wp_ajax_search_products', array($this, 'search_products'));

        // Add scripts and styles
        add_action('admin_enqueue_scripts', array($this, 'enqueue_admin_scripts'));
    }

    public function add_admin_menu() {
        add_menu_page(
            'Baserow Importer',           // Page title
            'Baserow Importer',           // Menu title
            'manage_options',             // Capability
            'baserow-importer',           // Menu slug
            array($this, 'render_admin_page'), // Callback function
            'dashicons-database-import',  // Icon
            56                           // Position
        );

        add_submenu_page(
            'baserow-importer',           // Parent slug
            'Baserow Settings',           // Page title
            'Settings',                   // Menu title
            'manage_options',             // Capability
            'baserow-importer-settings',  // Menu slug
            array($this->settings, 'render_settings_page') // Callback function
        );
    }

    public function enqueue_admin_scripts($hook) {
        if ($hook !== 'toplevel_page_baserow-importer' && $hook !== 'baserow-importer_page_baserow-importer-settings') {
            return;
        }

        wp_enqueue_style(
            'baserow-importer-css',
            BASEROW_IMPORTER_PLUGIN_URL . 'assets/css/admin-style.css',
            array(),
            BASEROW_IMPORTER_VERSION
        );

        wp_enqueue_script(
            'baserow-importer-js',
            BASEROW_IMPORTER_PLUGIN_URL . 'assets/js/admin-script.js',
            array('jquery'),
            BASEROW_IMPORTER_VERSION,
            true
        );

        wp_localize_script('baserow-importer-js', 'baserowImporter', array(
            'ajax_url' => admin_url('admin-ajax.php'),
            'nonce' => wp_create_nonce('baserow_importer_nonce')
        ));
    }

    public function render_admin_page() {
        // Check if settings are configured
        $api_url = get_option('baserow_api_url');
        $api_token = get_option('baserow_api_token');
        $table_id = get_option('baserow_table_id');
        
        if (empty($api_url) || empty($api_token) || empty($table_id)) {
            ?>
            <div class="wrap">
                <h1>Baserow Product Importer</h1>
                <div class="notice notice-warning">
                    <p>Please configure your Baserow settings before using the importer. 
                       <a href="<?php echo admin_url('admin.php?page=baserow-importer-settings'); ?>">Go to Settings</a>
                    </p>
                </div>
            </div>
            <?php
            return;
        }

        ?>
        <div class="wrap">
            <h1>Baserow Product Importer</h1>

            <div class="baserow-search-container">
                <div class="baserow-search-controls">
                    <input type="text" id="baserow-search" placeholder="Search products..." class="regular-text">
                    <select id="baserow-category-filter">
                        <option value="">All Categories</option>
                    </select>
                    <button class="button button-primary" id="search-products">Search Products</button>
                </div>
            </div>

            <div id="baserow-products-grid" class="products-grid">
                <!-- Products will be loaded here -->
                <div class="loading">Loading products...</div>
            </div>

            <div id="loading-overlay" class="loading-overlay" style="display: none;">
                <div class="loading-content">
                    <span class="spinner is-active" style="float: none; margin: 0 10px 0 0;"></span>
                    Processing...
                </div>
            </div>
        </div>
        <?php
    }

    public function test_baserow_connection() {
        check_ajax_referer('baserow_test_connection', 'nonce');

        $api_url = get_option('baserow_api_url');
        $api_token = get_option('baserow_api_token');
        $table_id = get_option('baserow_table_id');

        if (empty($api_url) || empty($api_token) || empty($table_id)) {
            wp_send_json_error(array('message' => 'Missing required settings'));
            return;
        }

        $url = trailingslashit($api_url) . "api/database/rows/table/{$table_id}/?user_field_names=true&size=1";
        
        $response = wp_remote_get($url, array(
            'headers' => array(
                'Authorization' => 'Token ' . $api_token,
                'Content-Type' => 'application/json'
            )
        ));

        if (is_wp_error($response)) {
            wp_send_json_error(array('message' => $response->get_error_message()));
            return;
        }

        $status_code = wp_remote_retrieve_response_code($response);
        if ($status_code !== 200) {
            wp_send_json_error(array('message' => "API returned status code: $status_code"));
            return;
        }

        $body = wp_remote_retrieve_body($response);
        $data = json_decode($body, true);

        if (json_last_error() !== JSON_ERROR_NONE) {
            wp_send_json_error(array('message' => 'Invalid JSON response from API'));
            return;
        }

        wp_send_json_success(array('message' => 'Connection successful'));
    }

    public function search_products() {
        check_ajax_referer('baserow_importer_nonce', 'nonce');

        $search_term = sanitize_text_field($_POST['search'] ?? '');
        $category = sanitize_text_field($_POST['category'] ?? '');

        $api_url = get_option('baserow_api_url');
        $api_token = get_option('baserow_api_token');
        $table_id = get_option('baserow_table_id');

        $url = trailingslashit($api_url) . "api/database/rows/table/{$table_id}/?user_field_names=true";
        
        // Add search parameters if provided
        $params = array();
        if (!empty($search_term)) {
            $params['search'] = $search_term;
        }
        if (!empty($category)) {
            $params['filter__Category__equal'] = $category;
        }
        
        if (!empty($params)) {
            $url .= '&' . http_build_query($params);
        }

        error_log('Requesting URL: ' . $url); // Debug log

        $response = wp_remote_get($url, array(
            'headers' => array(
                'Authorization' => 'Token ' . $api_token,
                'Content-Type' => 'application/json'
            )
        ));

        if (is_wp_error($response)) {
            error_log('API Error: ' . $response->get_error_message());
            wp_send_json_error(array('message' => $response->get_error_message()));
            return;
        }

        $body = wp_remote_retrieve_body($response);
        $data = json_decode($body, true);

        // Debug log
        error_log('API Response: ' . print_r($data, true));

        if (json_last_error() !== JSON_ERROR_NONE) {
            wp_send_json_error(array('message' => 'Invalid JSON response from API'));
            return;
        }

        wp_send_json_success($data);
    }
}

function baserow_importer_init() {
    // Check if WooCommerce is active
    if (!class_exists('WooCommerce')) {
        add_action('admin_notices', function() {
            ?>
            <div class="error">
                <p><?php _e('Baserow Importer requires WooCommerce to be installed and activated.', 'baserow-importer'); ?></p>
            </div>
            <?php
        });
        return;
    }

    // Initialize the main plugin class
    new Baserow_Woo_Importer();
}

// Initialize plugin after all plugins are loaded
add_action('plugins_loaded', 'baserow_importer_init');

// Activation hook
register_activation_hook(__FILE__, 'baserow_importer_activate');

function baserow_importer_activate() {
    // Check PHP version
    if (version_compare(PHP_VERSION, '7.2', '<')) {
        deactivate_plugins(plugin_basename(__FILE__));
        wp_die('This plugin requires PHP version 7.2 or higher.');
    }

    // Check if WooCommerce is active
    if (!class_exists('WooCommerce')) {
        deactivate_plugins(plugin_basename(__FILE__));
        wp_die('This plugin requires WooCommerce to be installed and activated.');
    }

    // Create database tables if needed
    global $wpdb;
    $table_name = $wpdb->prefix . 'baserow_imported_products';
    $charset_collate = $wpdb->get_charset_collate();

    $sql = "CREATE TABLE IF NOT EXISTS $table_name (
        id mediumint(9) NOT NULL AUTO_INCREMENT,
        baserow_id varchar(255) NOT NULL,
        woo_product_id bigint(20) NOT NULL,
        import_date datetime DEFAULT CURRENT_TIMESTAMP,
        last_sync datetime DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY  (id),
        UNIQUE KEY baserow_id (baserow_id)
    ) $charset_collate;";

    require_once(ABSPATH . 'wp-admin/includes/upgrade.php');
    dbDelta($sql);
}
